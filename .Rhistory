library(dplyr)
library(statsr)
library(ggplot2)
load("gss.Rdata")
?gather
library(tidyverse)
library(tidyverse)
?gather
?one_hot
View(gss)
n(gss$owngun)
isna(gss$owngun)
sum(is.na(gss$owngun))
sum(!is.na(gss$owngun))
gss %>% ggplot(aes(x=owngun)) %>% geom_bar()
gss %>% ggplot(aes(x=owngun)) + geom_bar()
gss %>% ggplot(aes(x=owngun)) + geom_bar(na.rm = TRUE)
gss %>% ggplot(aes(x=owngun)) + geom_bar(stat = 'propotion')
gss %>% ggplot(aes(x=owngun)) + geom_bar(stat = 'prop')
gss %>% ggplot(aes(x=owngun)) + geom_bar(stat = 'p')
gss %>% replace(owngun,['NA','Refused'],NA)
gss %>% replace(owngun,c('NA','Refused'),NA)
gss %>% replace(owngun,c(NA,'Refused'),NA)
gss %>% replace(owngun,c(NA,'Refused'),values = NA)
?replace
gss %>% replace(owngun,(gss$owngun == "Refused"),values = NA)
gss$owngun == "Refused"
gss$owngun
gss$owngun == 'Refused'
sum(gss$owngun == 'Refused')
sum(gss$owngun == 'Yes')
clear
clc
gss$owngun == "Yes"
own_gun_temp <- all(rna(gss$owngun))
# Let's first remove NAs to do our comparison
rna <- function(x) replace(x,is.na(x),"") #replace NA with empty char to make comparison and know the value of refused
all <- function(x) replace(x,x=="" | x=="Refused",NA) #replace value of Refused to NA
own_gun_temp <- all(rna(gss$owngun))
own_gun_temp
rna(gss$owngun)
replace_na(gss$owngun,0)
?replace_na
replace_na(gss$owngun,"ok")
k <- replace_na(gss$owngun,"ok")
rm(k)
rm(own_gun_temp)
clc
clear
is.na(gss$owngun)
sum(is.na(gss$owngun))
rna(gss$owngun)
gss$owngun == "Yes"
sum(gss$owngun == "Yes")
load("gss.Rdata")
sum(gss$owngun == "Yes")
sum(gss$owngun == "Yes",na.rm = TRUE)
sum(gss$owngun == "Refused",na.rm = TRUE)
sum(gss$owngun == "NO",na.rm = TRUE)
replace(gss$owngun,gss$owngun == "Refused",NA,na.rm=TRUE)
replace(gss$owngun,gss$owngun == "Refused",NA)
replace(gss$owngun,(gss$owngun == "Refused",na.rm=TRUE),NA)
gss$owngun == "YEs"
gss$owngun == "Yes"
gss$owngun == "Yes" == TRUE
(gss$owngun == "Yes") == TRUE
na.exclude(gss$owngun)
na.exclude(gss$owngun) %>% replace("Refused",NA)
K <- na.exclude(gss$owngun) %>% replace("Refused",NA)
K
View(K)
filter
filter(gss$owngun == "Yes" |gss$owngun == "No")
gss %>% filter(owngun == "Yes" | owngun == "No",na.rm=TRUE)
unique(gss$owngun)
filtered <- gss %<% filter(owngun== "Yes" | owngun == "No" , na.rm=TRUE)
filtered <- gss %>% filter(owngun== "Yes" | owngun == "No" , na.rm=TRUE)
dim(filter)
dim(filtered)
filtered %>% ggplot(aes(x=owngun)) %>% geom_bar()
filtered %>% ggplot(aes(x=owngun)) + geom_bar()
filtered %>% ggplot(aes(x=owngun)) + geom_bar() + scale_y_continuous(labels = scales::percent)
filtered %>% ggplot(aes(x=owngun)) + geom_bar(stat = "identity") + scale_y_continuous(labels = scales::percent)
filtered %>% ggplot(aes(x=owngun)) + geom_bar(stat = "prop") + scale_y_continuous(labels = scales::percent)
filtered %>% ggplot(aes(x=owngun,y= ..prop..)) + geom_bar(stat = "prop") + scale_y_continuous(labels = scales::percent)
filtered %>% ggplot(aes(x=owngun,y= ..prop..)) + geom_bar() + scale_y_continuous(labels = scales::percent)
filtered %>% ggplot(aes(x=owngun,y= ..prop..,group=1)) + geom_bar() + scale_y_continuous(labels = scales::percent)
gss %>% ggplot(aes(x=tvhours)) + geom_histogram()
gss$tvhours
gss %>% ggplot(aes(x=tvhours)) + geom_histogram(na.rm = TRUE)
gss %>% ggplot(aes(x=tvhours)) + geom_histogram(na.rm = TRUE,binwidth = 10)
gss %>% ggplot(aes(x=tvhours)) + geom_histogram(na.rm = TRUE,binwidth = 5)
gss %>% ggplot(aes(x=tvhours)) + geom_histogram(na.rm = TRUE,binwidth = 1)
mean(gss$tvhours,na.rm = TRUE
)
gss %>% ggplot(aes(x=tvhours)) + geom_histogram(na.rm = TRUE,binwidth = 1)
mean(gss$tvhours,na.rm = TRUE
mean(gss$tvhours,na.rm = TRUE)
mean(gss$tvhours,na.rm = TRUE)
mean(gss$tvhours,na.rm = TRUE),median(gss$tvhours,na.rm = TRUE))
median(gss$tvhours,na.rm = TRUE)
mean(gss$tvhours,na.rm = TRUE)
clean_gss <- gss %>% filter((owngun=="YES" | owngun =="No") & tvhours <15,na.rm = TRUE)
clean_gss %>% ggplot(aes(x=tvhours)) + geom_histogram(na.rm = TRUE,binwidth = 1)
clean_gss <- gss %>% filter((owngun=="YES" | owngun =="No") & tvhours <15,na.rm = TRUE) %>% select(owngun,tvhours)
View(clean_gss)
unique(clean_gss$owngun)
clean_gss <- gss %>% filter(owngun=="YES" | owngun =="No" & tvhours <15,na.rm = TRUE) %>% select(owngun,tvhours)
unique(clean_gss$owngun)
clean_gss <- gss %>% filter(owngun=="YES" | owngun =="No" , tvhours <15,na.rm = TRUE) %>% select(owngun,tvhours)
View(clean_gss)
unique(clean_gss$owngun)
sum(clean_gss$owngun)==TRUE
sum(clean_gss$owngun =="Yes")
sum(clean_gss$owngun =="No")
clean_gss <- gss %>% filter(owngun=="YES" || owngun =="No" , tvhours <15,na.rm = TRUE) %>% select(owngun,tvhours)
clean_gss <- gss %>% filter(owngun=="YES" or owngun =="No" , tvhours <15,na.rm = TRUE) %>% select(owngun,tvhours)
clean_gss <- gss %>% filter(owngun=="YES" || owngun =="No" , tvhours <15,na.rm = TRUE) %>% select(owngun,tvhours)
clean_gss <- gss %>% filter(owngun=="YES" | owngun =="No" , tvhours <15,na.rm = TRUE) %>% select(owngun,tvhours)
clean_gss <- gss %>% filter(owngun=="YES" | owngun =="No" ,na.rm = TRUE) %>% select(owngun,tvhours)
unique(clean_gss$owngun)
View(clean_gss)
clean_gss <- gss %>% filter(owngun=="YES" | owngun =="No" ,!is.na(tvhours),na.rm = TRUE) %>% select(owngun,tvhours)
View(clean_gss)
unique(gss$race)
gss %>% ggplot(aes(x=race,y=..prop..,group=1)) + geom_bar(na.rm = TRUE)
gss %>% ggplot(aes(x=race,y=..prop..,group=1)) + geom_bar(na.rm = TRUE) +
scale_y_continuous(labels = scales::percent)
clean_gss <- gss %>% filter(owngun %in% c("Yes","No") , race %in% c("White","Black"))
View(clean_gss)
clean_gss <- gss %>% filter(owngun %in% c("Yes","No") , race %in% c("White","Black")) %>% select(race,owngun)
View(clean_gss)
clean_gss <- gss %>% filter(owngun %in% c("Yes","No") , race %in% c("White","Black")) %>% select(race,owngun) %>% replace(owngun,c("Yes","No"),c(1,0))
clean_gss <- gss %>% filter(owngun %in% c("Yes","No") , race %in% c("White","Black")) %>% select(race,owngun)
?replace
replace(clean_gss$owngun,c("Yes","No"),c(1,0))
clean_gss$owngun[clean_gss$owngun == "Yes"]
clean_gss$owngun[clean_gss$owngun == "Yes"] <- 1
View(clean_gss)
clean_gss <- gss %>% filter(owngun %in% c("Yes","No") , race %in% c("White","Black")) %>% select(race,owngun)
rep(1,2)
clean_gss$owngun[clean_gss$owngun == "Yes"] <- rep(1,length(clean_gss$owngun[clean_gss$owngun == "Yes"])
clean_gss$owngun[clean_gss$owngun == "Yes"] <- rep(1,length(clean_gss$owngun[clean_gss$owngun == "Yes"]))
clean_gss$owngun[clean_gss$owngun == "Yes"] <- rep(1,length(clean_gss$owngun[clean_gss$owngun == "Yes"]))
replace(clean_gss$owngun,"Yes",1)
replace(clean_gss$owngun,"Yes","1")
clean_gss <- gss %>% filter(owngun %in% c("Yes","No") , race %in% c("White","Black")) %>% select(race,owngun)
>mutate
?mutate
clean_gss <- gss %>% filter(owngun %in% c("Yes","No") , race %in% c("White","Black")) %>% select(race,owngun) %>% mutate(gun=ifelse( owngun == "Yes",1,0) ) %>% select(race,gun)
View(clean_gss)
clean_gss <- gss %>% filter(owngun %in% c("Yes","No") , race %in% c("White","Black")) %>% select(race,owngun) %>% mutate(gun=ifelse( owngun == "Yes",1,0) ) %>% select(race,owngun,gun)
clean_gss <- gss %>% filter(owngun %in% c("Yes","No") , race %in% c("White","Black")) %>% select(race,owngun) %>% mutate(gun=ifelse( owngun == "Yes",1,0) ) %>% select(race,gun)
head(clean_gss)
sample(clean_gss,size = 5)
tail(clean_gss)
inference(y = gun, x = race, data = clean_gss, statistic = "mean", type = "ht", null = 0, alternative = "twosided", method = "theoretical")
summarise(clean_gss)
View(clean_gss)
inference(y = gun, x = race, data = clean_gss, statistic = "mean", type = "ht", null = 0, alternative = "twosided", method = "simmulation")
inference(y = gun, x = race, data = clean_gss, statistic = "mean", type = "ht", null = 0, alternative = "twosided", method = "simulation")
inference(y = gun, x = race, data = clean_gss, statistic = "mean", type = "ht", null = 0, alternative = "greater", method = "simulation")
inference(y = gun, x = race, data = clean_gss, statistic = "mean", type = "ht", null = 0, alternative = "greater", method = "theoretical")
unique(clean_gss$race)
droplevels(clean_gss$race)
clean_gss <- gss %>% filter(owngun %in% c("Yes","No") , race %in% c("White","Black")) %>% select(race,owngun) %>% mutate(gun=ifelse( owngun == "Yes",1,0),race=droplevels(race) ) %>% select(race,gun)
inference(y = gun, x = race, data = clean_gss, statistic = "mean", type = "ht", null = 0, alternative = "twosided", method = "theoretical")
inference(y = gun, x = race, data = clean_gss, statistic = "mean", type = "ht", null = 0, alternative = "twosided", method = "simulation")
inference(y = gun, x = race, data = clean_gss, statistic = "mean", type = "ht", null = 0, alternative = "twosided", method = "theoratical")
inference(y = gun, x = race, data = clean_gss, statistic = "mean", type = "ht", null = 0, alternative = "twosided", method = "theoretical")
